#include <limits.h>
#include <stdio.h>
#include <stdlib.h>

// A structure to represent a stack
struct StackNode {
    int data;
    struct StackNode* next;
};

struct StackNode *push(struct StackNode *root,const int newdata) {
  struct StackNode *newnode = malloc(sizeof(struct StackNode));
  newnode->data=newdata;
  newnode->next=NULL;
  if (root) newnode->next=root;
  printf("%d pushed to stack\n",newdata);
  return newnode;
}

int pop(struct StackNode **root) {
  if (!(*root)) return INT_MIN;
  const int ret=(*root)->data;
  struct StackNode *newroot=(*root)->next;
  free(*root);
  *root=newroot;
  return ret;
}

int peek(struct StackNode *root) {
  if (root) return root->data;
  return INT_MIN;
}

int main() {
  struct StackNode* root = NULL;

  root=push(root, 10);
  root=push(root, 20);
  root=push(root, 30);

  printf("%d popped from stack\n", pop(&root));
  printf("Top element is %d\n", peek(root));

  return 0;
}
